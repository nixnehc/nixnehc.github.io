{
  "results": [
    {
      "href": "http://nixnehc.github.io/posts/2023/08/notes-maria-manzanos-model-theory-unfinished/", 
      "title": "\u003eNotes\u003c Maria Manzano's Model Theory [[unfinished",
      "body": "Maria Manzano (1999), Model Theory, Oxford Logic Guides: 37. (English edition, original Spanish 1990)\n才知道 Maria Manzano 是位女逻辑学家。\n这本书不包括 Stability theory (Morley) 方面的内容。\nModel theory: mathematical structures \u0026lt;~~~\u0026gt; formal languages\nModel theory become as a discipline until the 1950s. The name \u0026ldquo;model theory\u0026rdquo; was used for the first time by Tarski in 1954.\nthe Compactness theorem is a simple corollary from the Completeness thm., but without appealing to the notion of deducibility, we can obtain a purely semantic proof: by combining the models of finite sets of formulas to construct that of the infinite one. ultrafilter + ultraproduct ==\u0026gt; a model of the infinite set of formulas.\nanother way of proving compactness, via. the concept of a diagram. "
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/07/%E5%86%8D%E8%A7%81%E5%B0%8F%E6%A9%98%E5%86%8D%E8%A7%81%E7%A5%96%E5%B9%B3/", 
      "title": "再见小橘，再见祖平",
      "body": "小橘是祖平在其驾校绑架来的小猫咪，因其橘色花纹，祖平便叫它「小橘」，快四五个月大了吧，不过祖平近期好像没有让它变成“公公”的计划。我和小橘第一次见面应该是在五六月的时候，具体时日记不清了，是在祖平鸡山出租屋见的。问及他为什么要养，真是蠢蛋，这问题不问也知道罢，无非是因为寂寞之类的缘由，事实上也确实如此。\n寂寞吧，就要养小猫咪，这不由地让我想起以前的小多多来，算起来已经和小多多分开快七八个月了吧，新人家对他好不好？夏天还会中暑吗？食欲好吗？毛是不是已经很长了？这些我都再也不由得知了，唉，就混着很多事和人埋葬在海马体吧——那是脑科学家说人类存放记忆的地方。基于这种理由，所以我一直没有勇气完成这个博客中关于小多多的那个页面，是呀，我要去何处习来勇气呢？ 最近在b站看过一句话，「世界破破烂烂，小猫缝缝补补」，深以为然。\n说回小橘，前阵时间因为祖平要去参加银行的入职培训，深圳那边的住处又没有安排好，于是就拖我照顾几天。这还不容易，我现在可是掌握三个宿舍密码的人，于是就将小橘放在隔壁景涛哥那个房间里，我每天去喂粮铲屎就行。小橘是真爱叫，恐还是小猫的缘故，精力充沛得很。\n在此期间，钟浩来取博士通知书，看见了它便和它玩过一阵。杨雯宇由钟浩那得知我处竟有小猫咪，便在七月二十日晚来我宿舍看它，还给小橘带来两根猫条，它见了自是两眼放光。我们那晚围绕小猫咪的对话进行了很久，一直到次日凌晨两点我才送她回人才公寓那边，我和杨并不是很熟悉的朋友，好像大多时候都是她在说然后我附和，但在这次对话中我深觉其人格的独立和有趣，且我从她处学到了很多，比如小橘恐怕是个「雀猫」而不是「橘猫」，此外还知道了有「缺氧」这么好玩的游戏，那些八卦秘闻之类就更不需多说了。提起杨雯宇，她是我经由南校叶映彤认识的，二人本科在山大是同学，那晚杨还说起叶的72小时学习法，我听了很是震惊，深感人与人之间的差距，又不免自卑起来。我和叶虽是同校同专业，但并不是同学，他是我在网上认识的，现在这个时代人与人之间的联系对我来说始终是一个谜团，相识恐怕总是在不经意之间，人们之间的雾不那么浓却也更浓了，这使我很恐惧。\n今天祖平回来收拾东西便要走了，祖平去深圳工作，小橘从此也要当一只深圳猫了。杨雯宇稍晚时候问我小橘还在不在，要给它买个玩具，我只能回她说很可惜。她说也不要紧，她楼下有很多小猫咪，还邀我改天去瞧瞧，我很是感激她的这番话，心头失落之感也稍恢复些。\n在帮祖平搬完行李后，槿园三号二楼的这个角落里可以真算得上只有我一个人了。在把那装有小橘的包放在北门后，他们要等货拉拉，而我有什么可以等待的吗？之后去哪里？我又能去哪里呢？\n呵，干饭去！\n十八日在隔壁打游戏： 小橘蹲我腿 哈哈我真菜，又死了 十九日晚带小橘来我宿舍玩：\n你在干嘛？ 。\n偷瞄 小橘躺 小橘困了 最后，用在杨雯宇朋友圈偷来的两张图结束此文吧（版权归杨所有）： "
    },
    {
      "href": "http://nixnehc.github.io/search/", 
      "title": "Search",
      "body": ""
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/07/%E6%A8%A1%E6%80%81%E9%80%BB%E8%BE%91-%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E-box-%E5%92%8C-diamond-%E6%88%96%E8%AE%B8%E4%B9%9F%E6%9C%89%E7%88%B1%E6%83%85-%E7%9A%84%E6%95%85%E4%BA%8B/", 
      "title": "模态逻辑: 一个关于 Box 和 Diamond (或许也有爱情) 的故事",
      "body": "[写在前面] 以下内容是为7月5日 模态逻辑 考试所准备的草稿, 整整考了4个小时, 真是有生之年考过最长的考试了😭, 但准备的内容似乎还是太多了, 根本写不完. 望着这些准备好的稿纸, 虽无甚洞见, 但毕竟是自己一段时间内的心血, 想着弃之可惜, 遂又加以整理, 姑且当作一篇博文让其静静地躺在这里吧. 写到这里时却不免又悲从中来, 文章尚有「安生立命」之所, 作文者有焉?\nDisclaimer: 本文可能会包含事实性的错误🙅\n此外本文写得相当的随性, 中英混杂并且几乎是想到啥就写啥, 这算作是某种作者的特权吧, 哈哈哈哈😆😆😆. 此外为了输入的便捷考虑, 正如您所看到的那样, 除中文繁体的引用符号「」外, 全文使用半角标点.\nPaul Halmos 在 Naive Set Theory (1974) 的序言中有句话说得很好, 在此处引用是最合适过不的了:\nthe expert specialist will find nothing new here.\n模态逻辑: 一个关于 $Box$ 和 $Diamond$ (或许也有爱情) 的故事 # Abstract 上溯亚里士多德, 间承中世纪诸哲人, 下迄 19 世纪初直至今日, 现代模态逻辑可谓缘起于对「必然」,「可能」 等哲学概念之形式化研究, 而繁盛于 CS,语言学,博弈论等诸当代科学跨学科之交融. 故上述各门类仍不失模态逻辑及其「周边」(如 Epistemic Logic, Deontic Logic 等) 发展的动因之一.\n本文旨在为模态逻辑提供一个简短的,数学上的介绍，不求面面俱到. 所描绘的对象不妨称之为「抽象模态逻辑」(abstract modal logic). 故本文的行文风格是技术导向的且包含若干观念的堆砌.\n是时候开启旅程了, Long Live (modal) Logic!\n# 1 Introduction 本节为全文提供基本的技术背景, 包括基本的概念和定义以及符号上的约定. 下文中用符号 // 表示定义或定理等环境的结束.\n关系结构 $(W,R)$ (前者被称为论域的家伙是个非空集, 后者是论域上的一个二元关系) 是一种常见的结构, 是对事物联系的数学抽象, 我们可以简单地将关系结构视作有向图, 并且(当论域有穷时)可以将其画下来. 常见的关系结构有 偏序, 树, 族谱 等. 后面我们会看到, 模态逻辑是描述关系结构十分趁手的工具.\n## 1.1 Languages 逻辑是门形式化科学,「形式语言」则是逻辑家的武器. 本文既然讨论的是模态逻辑, 那么什么是模态语言呢? 为简便起见, 本文仅限于「基本命题模态语言」(即只含一个一元模态词)上的讨论.\n首先我们固定一集 可数 的命题变元集 Prop (某种程度上 Prop 是可数的也决定了语言是可数的), 则基本模态语言由如下 BNF 规则给出：\n$$ \\mathcal{L} \\ni \\varphi ::= p \\mid \\bot \\mid \\neg \\varphi \\mid (\\varphi \\lor \\varphi) \\mid \\Diamond \\varphi $$\n其中 $p \\in$ Prop. $\\Diamond$ 这个长的像「钻石」的家伙就是所谓的(一元)模态词了, 虽然它长得像💎却一点也无后者的(由消费主义吹鼓起来的)「坚贞」. $\\bot$ 表示矛盾, 对应我们思维中的某些「脏」东西. 引入如下符号作为缩写对以后的讨论是有益的：\n$\\Box \\varphi := \\neg \\Diamond \\neg \\varphi$\n$\\varphi \\land \\psi := \\neg (\\neg \\varphi \\lor \\neg \\psi )$\n$\\varphi \\to \\psi := \\neg \\varphi \\lor \\psi$\n「盒子」$\\Box$ 被称为 $\\Diamond$ 的对偶算子, 他们惺惺相惜, 却也不总是形影不离, 就像 钻石 和 装饰它的 盒子 那样。\n对于上面给出的语言, 我们可以在其身上玩出颇多的花样, 如定义模态度(一个公式中模态算子所嵌套的最大层数),子公式等. 正如玫瑰钻石之于爱情或是商人吹捧, 显卡之于男人抑或物有所值, 形式语言只是一堆符号罢了, 符号虽也自有其趣味, 但恐过于孤独. 是时候为形式语言注入点「资本主义」了.\n## 1.2 Semantics 为形式语言的「资本化」这件事逻辑学家们称之为「解释」, 用什么来解释模态语言呢? 关系结构某种程度是数学上的天选之子, 不过客随主便, 在模态逻辑中他们被称之为「框架」和「模型」.\nDef. 一个框架(frame) 是二元组 $(W,R)$, 其中 $W$ 非空, $R \\subseteq W \\times W$. 一个模型是 $M=(W,R,V)$, 他由一个框架 $(W,R)$ 装配上 $V$ —— 一个从 Prop 到 $\\wp(W)$ 的函数, 称之为赋值 —— 组成. //\n通俗地说，一个模型就是一个有向图 $(W,R)$ 加上对这个图的某些注释 (赋值干的活). 赋值这东西看起来有点怪异, 它有很多其他的定义方式, 较流行的有如下两种: 给定框架 $(W,R)$\n$V \\colon W \\times Prop \\to \\{0,1\\}$ $V \\colon W \\to \\wp(Prop)$ (这时赋值往往被称为「加标函数」) 对于上述所采用的赋值定义, 一个直接的好处是, 此时模型 $M=(W,R,V)$ 可以很自然地被视为一个一阶结构： $$ M=(W,R,V(p),V(q),V(r),\u0026hellip;) $$ 其中 $V(p),V(q),V(r),\u0026hellip;$ 恰好对应论域 $W$ 上的一元谓词.\n有了模型, 怎么和语言联系起来呢? 可满足,真值条件 等人专门干这种事情.\nDef. 设 $w$ 是模型 $M=(W,R,V)$ 中的一个状态, 公式 $\\varphi$ 在 $w$ 上可满足, 记作 $M,w \\Vdash \\varphi$, 递归地定义如下:\n$M,w \\Vdash p \\Leftrightarrow w \\in V(p)$ $M,w \\Vdash \\bot \\Leftrightarrow never$ $M,w \\Vdash \\neg \\varphi \\Leftrightarrow not \\; M,w \\Vdash \\varphi$ $M,w \\Vdash \\varphi \\lor \\psi \\Leftrightarrow M,w \\Vdash \\varphi \\; or \\; M,w \\Vdash \\psi$ $M,w \\Vdash \\Diamond \\varphi \\Leftrightarrow \\exists u \\colon Rwu \\; \\\u0026amp; \\; M,w \\Vdash \\varphi$ 对于公式集 $\\Sigma$,用 $M,w \\Vdash \\Sigma$ 表示 $\\Sigma$ 中所有的公式都在$M,w$ 上可满足. //\n可满足这个概念本质上是一种 局部性 概念, 吾欲在点 $w$ 上判断公式 $\\Diamond \\varphi$ 是否成立, 就得沿着 $R$ 的目光所及之处看看是否有某个“角落” $u$, 在其中 $\\varphi$ 成立. 因此模态词可以被视作是对一阶量词的某种限制. 这便是所谓的「模态逻辑之局部观」.\n一个框架 $(W,R)$ 可以产生出无数多的模型 $(W,R,V)$, 这都是赋值 $V$ 在作祟, 为了消解 $V$ 捣乱的权利, 我们制定了《有效性法典》:\nDef. 任给公式 $\\varphi$ :\n$\\varphi$ 在点框架 $(F,w)$ 上有效，记作 $F,w \\Vdash \\varphi$, 若对于 $F$ 上的任意赋值 $V$ 都有 $(F,V),w \\Vdash \\varphi$. $\\varphi$ 在框架 $F$ 上有效，记作 $F \\Vdash \\varphi$, 若对于 $F$ 中的任意点 $w$ 都有 $F,w \\Vdash \\varphi$. $\\phi$ 在框架类 $\\mathbb{F}$ 上有效，记作 $\\mathbb{F} \\Vdash \\phi$, 若对于 $\\mathbb{F}$ 中的任意框架 $F$ 都有 $F \\Vdash \\phi$. $\\phi$ 是有效的，记作 $\\Vdash \\phi$, 若 $\\phi$ 在任意框架类上都有效. // 因此, 我们的《有效性法典》制定了4个等级的有效性公民, 他们的权利依次递进: $$ 点框架有效 \\to 框架有效 \\to 框架类有效 \\to 有效 $$\n一个框架类 $\\mathbb{F}$ 上的所有有效式构成 $\\mathbb{F}$ 的逻辑 $\\Delta_\\mathbb{F}$, 换而言之 $\\Delta_\\mathbb{F} = \\{ \\varphi \\mid \\mathbb{F} \\Vdash \\varphi \\}$.\n一些例子总是有益的(虽然此处不欲给出具体的证明):\n$\\Box (p \\to q) \\to (\\Box p \\to \\Box q)$ 在所有的框架类上都是有效的, 这个公式有个特殊的名字: K —— 为纪念 Kripke. $\\Diamond \\Diamond p \\to \\Diamond p$ (叫做 4 公式) 在传递框架类上有效. $p \\to \\Box \\Diamond p$ (叫做 B 公式，为纪念直觉主义数学家 Brouwer) 在对称框架类上有效. 诸如此类例子数不胜数\u0026hellip;\u0026hellip; 在运用逻辑的过程中, 总期以从某些前提推出某个结论来, 并且「逻辑」这个神圣的词保证了这种推理的正确性. 因此「后承关系」是逻辑中重点关注的“危险分子”. 模态逻辑中有两个这种“危险分子”, 即「局部后承」和「全局后承」两兄弟, 这里我们主要关注「局部后承」小弟(一个很重要的原因是“打不过”大哥「全局后承」😢).\nDef. 对于任意公式集 $\\Sigma \\cup \\{\\varphi\\}$ 和框架类 $S$, 称 $\\varphi$ 在 $S$ 上是 $\\Sigma$ 的一个 局部语义后承，记作 $\\Sigma \\Vdash_S \\varphi$, 若对于任意基于 $S$ 中框架所得到的点模型 $M,w$ 有: $M,w \\Vdash \\Sigma \\Rightarrow M,w \\Vdash \\varphi$. //\n## 1.3 Normal modal logics 前一小节主要是从语义角度讨论逻辑的, 但逻辑自有其语形维度, 即逻辑也由一条「语形流水线」生成出来, 这类流水线有很多, 我们来看看最繁忙的那条吧, 它叫做「正规模态逻辑」.\nDef. 一个正规模态逻辑 $\\Delta$ 是一个公式集, 它包含\n所有命题重言式、K公理 $\\Box (p \\to q) \\to (\\Box p \\to \\Box q)$, Dual公理 $\\Diamond p \\leftrightarrow \\neg \\Box \\neg p$. 对 分离规则 MP，代入规则 Sub 和必然化规则 Gen 封闭. // $MP: \\dfrac{\\varphi, \\varphi \\to \\psi}{\\psi}$ $Sub: \\dfrac{\\varphi}{\\sigma(\\varphi)}$ $ Gen:\\dfrac{\\varphi}{\\Box\\varphi}$ 其中 $\\sigma$ 是一个代入函数, 就是将一个公式中同一个命题变元的所有出现同时替换为某个公式. 这3条规则对语义上的概念有不同的保持性, 下表是个总结:\nMP Sub Gen 保有效性 ✅ ✅ ✅ 保全局真 ✅ ❌ ✅ 保局部真 ✅ ❌ ❌ 因此, 从各种角度看, MP 都是我们最忠诚的好伙伴, 我们可以在各个场合无条件的“利用”它😏😏\n# 2 Modal model theory \u0026amp; 一丢丢 frame theory 模型 —— 这个赋予形式语言意义的家伙在逻辑研究中处于核心地位之一. 正所谓「一生二, 二生三」, 从已有模型也可以构造出新模型来. 但数学的世界中并不总是「新人胜旧人」, 这一特点称之为 不变性, 读者愿意的话, 念做「不变心」也未尝不可.\n## 2.1 三类模型操作 称两个点模型 $M,w$ 和 $N,u$ 是 模态等价的，记作 $M,w \\equiv N,u$, 如果在其上为真的公式相同, 即 $\\{\\varphi \\mid M,w \\Vdash \\varphi \\} = \\{\\varphi \\mid N,u \\Vdash \\varphi \\}$. 模态等价是考验两个点模型是否一条心的最高标准. 有三种常见的使模型「不变心」的操作: 不交并, 生成子模型, 受限射.\n给定一堆论域彼此不相交的模型 $\\{M_i\\}_{i \\in I}$, 其 不交并 是它们的合体: $\\biguplus M_i = (W,R,V)$, 其中 $W,R$ 和 $V$ 是各个模型论域, 通达关系和赋值的并.\n模型 $M=(W,R,V)$ 的一个 生成子模型 是 $M\u0026rsquo;=(W’,R’,V’)$, 其中 $W\u0026rsquo; \\subseteq W$ 且对 $R$ 封闭，$R\u0026rsquo;,V\u0026rsquo;$ 都是原来的 $R,V$ 在新论域下的限制.\n任给两个模型 $M=(W,R,V)$ 和 $M\u0026rsquo;=(W’,R’,V’)$, 函数 $f \\colon W \\to W\u0026rsquo;$ 是从 $M$ 到 $M\u0026rsquo;$ 的一个 受限射, 若其满足:\n\\(w\\) 和 \\(f(w)\\) 满足同样的命题变元; $f$ 是一个同态; 若 $R\u0026rsquo;f(a)v$, 那么 $\\exists b \\in W, f(b)=v, Rab$;\n当 $f$ 是满射时, $M\u0026rsquo;$ 称之为 $M$ 的 受限射像. 如前文所述, 这三种操作都可以让模型(们)的“心”不变, 即施归纳于公式易得如下结论：\nThm. 模态可满足性在不交并,生成子模型和受限射下保持不变 形式地说：\n$M_i, w \\Vdash \\phi$ iff $\\biguplus M_i, w \\Vdash \\phi$. $M,w \\Vdash \\phi$ iff $M\u0026rsquo;, w \\Vdash \\phi$ ($M\u0026rsquo;$ 是一个 $M$ 的生成子模型). $M,w \\Vdash \\phi$ iff $N, f(w) \\Vdash \\phi$ ($f$ 是一个从 $M\u0026rsquo;$ 到 $M$ 的受限射).// ## 2.2 Bisimulations 上面的三种操作虽看似各不相干，但 互模拟 这一概念揭示了三者背后的共性。\nDef. 任何两个模型$M=(W,R,V), M\u0026rsquo;=(W\u0026rsquo;,R\u0026rsquo;,V\u0026rsquo;)$, 二者间的一个互模拟是非空关系$Z \\subseteq W \\times W\u0026rsquo;$, 满足\n若$wZw\u0026rsquo;$, 则这两点满足相同的命题变元; 若$wZw\u0026rsquo;,Rwu$, 则存在$u\u0026rsquo;\\in W\u0026rsquo;: R\u0026rsquo;w\u0026rsquo;u\u0026rsquo;$ 且 $uZu\u0026rsquo;$; 若$wZw\u0026rsquo;,R\u0026rsquo;w\u0026rsquo;u\u0026rsquo;$, 则存在$u\\in W: Rwu$ 且 $uZu\u0026rsquo;$; 被模型间互模拟关系相连结的两个点$w,w\u0026rsquo;$称之为是互模拟的, 记作$w \\rightleftarrows w\u0026rsquo;$。//\n互模拟的定义或许稍微陌生, 某种程度上是因为它是一种余归纳定义, 而不是常见的归纳定义.\n不交并,生成子模型,受限射只是互模拟的特殊情形. 其中受限射与互模拟的定义极为相似, 二者最大区别在于, 前者是一个函数, 而后者是一个二元关系. //\n不出意料, 互模拟本身也保持不变性:\nThm. 若 $w \\rightleftarrows w\u0026rsquo;$, 则 $w \\equiv w\u0026rsquo;$.s //\n一个有趣的问题是, 上述定理的逆命题成立吗? 非也, 一个经典的反例如下\n蓝皮书p68·如来佛大战千手观音(王彦晶老师语)\n上面的$M$和$M\u0026rsquo;$很类似,二者都有无穷多条分支,不过前者各分支的长度都是有穷长的;而后者有一条无穷长的分支. 可是$w$和$w\u0026rsquo;$是模态等价的. 这一点或许并不奇怪,正如「吾生也有涯而知无涯」, 有穷长度的公式凭什么能区分无穷的模型呢?\n但若对模型稍作限定,则 $\\equiv$ 和 $\\rightleftarrows$ 这两个关系就可以不分你我了. 称一个模型是像有穷的, 如果每个点的后继都是有穷的. 在像有穷的模型上, $\\equiv$ 便和 $\\rightleftarrows$ 可以视为同一.\nThm. (Hennesy-Milner) 如果 $M$ 和 $M\u0026rsquo;$ 是两个像有穷的模型, 则 [ M,w \\rightleftarrows M\u0026rsquo;,w\u0026rsquo; \\Leftrightarrow M,w \\equiv M\u0026rsquo;,w\u0026rsquo; . ]\nProof 这里有一个证明\nHennesy-Milner定理说明了, 在像有穷的模型下, 互模拟和模态等价可以视作一回事. 我们进一步抽象, 称一个模型类具有 Hennesy-Milner性质(HM性质), 如果在这个模型类中 $\\equiv \\;\\subseteq\\; \\rightleftarrows$.\n像有穷的模型类显然具有HM性质, 对像有穷这一概念进一步抽象, 则得到所谓的模态饱和.\nDef.(m-saturation) 一个模型 $M=(W,R,V)$ 是 m饱和的, 如果对于任意 $w\\in W$ 和任意公式集 $\\Gamma$, $\\Gamma$ 的每个有穷子集都在 $R[w]$ 上可满足蕴含 $\\Gamma$ 在 $R[w]$ 上可满足, 其中$R[w]=\\{u\\mid Rwu\\}$. //\nThm. m饱和的模型类具有HM性质. //\nProof (证明的过程相对繁琐,要用到超滤扩张之类的高级玩意嘞)//\n2.3 ## 标准翻译和刻画定理 模态逻辑不是一个孤儿, 他和其他逻辑有着紧密的亲缘关系, 「标准翻译」为这种分子生物学鉴定提供了工具.\n在模型层面, 基本模态语言通过标准翻译可以被视为FOL的一个片段, 更准确的说是 FOL$^2$ (只有两个变元的一阶语言) 的片段. 在模型层面与模态语言相对应的一阶语言又被称为模型语言, 记作 $\\mathcal{L}^1$, 它的字母表(带等词)包括一个二元关系符号$R$, 可数多个一元谓词符号 $P_i$ (对应命题变元$p_i$).\n标准翻译$ST_x$是从$\\mathcal{L}$到$\\mathcal{L}^1$到函数, 使得\n$ST_x (p) = Px$ $ST_x (\\bot) = x\\not = x$ $ST_x (\\neg \\varphi) = \\neg ST_x(\\varphi)$ $ST_x (\\varphi \\lor \\psi) = ST_x(\\varphi) \\lor ST_x(\\psi)$ $ST_x(\\Diamond \\varphi) = \\exists y (Rxy \\land ST_y(\\varphi))$ 1·打字打不动了,先用照片吧😭 (ps. 由此得到的一个教训是,还是少用markdown写公式为好🥲) 2 3 2.4 ## 一丢丢 corresponding theory 4 5 6 # 3 Completeness theory 本节主要叙述正规模态逻辑的完全性理论及其主要证明技术. 抽象地说, 一个正规模态逻辑无非是满足一些封闭条件的公式集而已, 但往往可以从语形和语义这两个方面来刻画这个集合. 完全性(加上可靠性)则告诉我们这两种刻画方式是等价的.\n本节用以证明完全性的技术可以概括为 completeness-via-canonicity, 其核心工具是「典范模型」. 而我们将会看到, 在用典范模型证明完全性的过程中, 实则体现了如下口号: [ \\text{truth = membership}. ]\n## 3.1 basic concepts 我们依旧在基本模态逻辑语言下讨论各种逻辑.\nDef. (Modal Logics, normal modal logics) 一个模态逻辑是包含所有命题重言式且对 MP,Sub 规则封闭的公式集. 用 $\\vdash_\\Delta \\phi$ 表示 $\\phi$ 属于逻辑 $\\Delta$, 并称 $\\phi$ 为逻辑 $\\Delta$ 的一条定理. 若 $\\Delta$ 额外包含 K 公理 和 Dual 公理, 且对 Gen规则 封闭, 则称 $\\Delta$ 是正规的. //\n在逻辑 $\\Delta$ 中, 称 $\\phi$ 从 $\\Gamma$ 中可推演, 记作 $\\Gamma \\vdash_\\Delta \\phi$, 如果存在 $\\Gamma$ 的有穷子集 $\\Sigma$ 使得 $\\vdash_\\Delta \\bigwedge \\Sigma \\to \\phi$ (当 $\\Sigma$ 为空集时, $\\bigwedge \\Sigma = \\bot$). $\\Gamma$ 是在 $\\Delta$ 中是一致的, 若 $\\Gamma \\not \\vdash_\\Delta \\bot$ .\n以下不加证明地列出一些关于推演的元性质, 这些性质虽然平平无奇, 却也不失为完全性证明地小帮手:\nProp. 对于任意逻辑 $\\Delta$ 和任意公式集 $\\Gamma$:\n$\\Gamma$ 不$\\Delta$一致 iff 存在公式 $\\phi$, $\\Gamma \\vdash_\\Delta \\phi \\land \\neg \\phi$ iff 对于任意公式 $\\psi$, $\\Gamma \\vdash_\\Delta \\phi$ . $\\Gamma \\not \\vdash_\\Delta \\phi \\Rightarrow$ $\\Gamma \\cup \\{\\neg \\phi\\}$ 是 $\\Delta$一致的. $\\Gamma$是$\\Delta$一致的 iff $\\Gamma$的每个有穷子集都是一致的. // 演绎定理在模态逻辑中是否成立是个老生常谈的问题了, 如果采用上面推演的定义, 则演绎定理成立. 反之, 如采用经典逻辑中用有穷公式序列的方式来定义推演, 则演绎定理通常在模态逻辑中便不复存在了. 其中的要点是 Gen 规则能否用在前提集上.\nThm. (Deduction Theorem) 对于任意逻辑$\\Delta$: $\\Gamma \\vdash_\\Delta \\varphi \\to \\psi$ iff $\\Gamma \\cup \\{\\varphi\\} \\vdash_\\Delta \\psi.$ //\nProof proof of Deduction Thm. 最小的正规逻辑记作 K, 用 K$AA\u0026rsquo;A\u0026rsquo;\u0026rsquo;\\cdots$ 表示包含 $\\{A,A\u0026rsquo;, A\u0026rsquo;\u0026rsquo;, \\dots\\}$ 的最小的正规逻辑. 这些公式有时被称之为特征公理. 一些知名的特征公理列举如下:\nD: $\\Box p \\to \\Diamond p$ T: $\\Box p \\to p$ B: $p \\to \\Box \\Diamond p$ 4: $\\Box p \\to \\Box \\Box p$ 5: $\\Box p \\to \\Box \\Diamond p$ 通过这些公理, 可以得到如下的正规逻辑:\nD := KD\nT := KT\nB := KTB\nS4 := KT4\nS5 := KT45\n实际上, 所有正规逻辑相对于集合的包含关系形成一个「完全格」(complete lattice).\n回到本节主线, 下面给出可靠性和完全性的形式定义:\nDef. (Soundness, Completeness)\nSoundness \u0026amp; Completeness 显然, 强完全蕴含弱完全 (取$\\Gamma$为空集即可), 但反之不然.\n是否存在「强可靠性」一说呢? 即 $\\Gamma \\vdash_\\Delta \\varphi \\Rightarrow \\Gamma \\Vdash_S \\varphi$. 实际上, 强/弱可靠性是等价的. 因为「证明」或「推演」这类概念本质上一类有穷性概念, 只涉及有穷多个公式和有穷多个推理步骤. 但其在语义上的小伙伴 ——— 语义后承则全然不同.\n一般来说, 一个逻辑(相对于某个框架类)是可靠的, 这一点可以不加证明地直接得到. 或许这种处理对于可靠性来说太不公平了. 若是硬着头皮证明可靠性, 其过程也是相当流水线式的. 欲证一个逻辑相对于某框架类可靠, 只需说明:\n该逻辑的所有公理都在这个框架类上有效; 所有证明规则 (MP, Sub, Gen) 在这个框架类上保持有效性. 因为以上三条规则在任意框架类上都是保持有效性的, 因此可靠性的证明就归结于说明公理是否有效了. 而这是十分容易做到的事情.\n如何证明完全性呢? 姑且一试. 欲证 [ \\Gamma \\Vdash_s \\varphi \\Rightarrow \\Gamma \\vdash_\\Delta \\varphi ] 不妨证其逆否 [ \\Gamma \\not\\vdash_\\Delta \\varphi \\Rightarrow \\Gamma \\not\\Vdash_S \\varphi. ]\n假设 $\\Gamma \\not\\vdash_\\Delta \\varphi$, 则 $\\Gamma\\cup \\{\\neg \\varphi\\}$ 是 $\\Delta$ 一致的. 想要得到 $\\Gamma \\not\\Vdash_S \\varphi$, 只需表明 $\\Gamma\\cup \\{\\neg \\varphi\\}$ 在框架类 $S$ 中的某个框架上可满足即可. 更一般地说, 只需表明每个 $\\Delta$ 一致的公式集在 $S$ 上可满足.\n如此一来, 完全性的证明就可以归结于如下口号:\n[“来吧! 为一致集找模型!”]\n怎么找呢? 自然不能瞎找, 这类模型有个响当当的名头 —— 典范模型 canonical models.\n## 3.2 Canonical model and its applications MCSs Lindenbaum\u0026#39;s Lemma canonical models Truth Lemma canonical models 5 (ps. 一个值得注意的事情是, 在完全性证明中, 我们实际上只用到了 Truth Lemma 的一个方向, 即 membership \u0026ndash;\u0026gt; truth. 换而言之, 完全性证明只需要一个较弱的真值引理就足够了, 这个弱版本不妨称之为「模型存在引理」)\n## 3.3 Two limited results 尽管典范模型是一种强有力的工具,但却不是万能的, 这里我们以两个较负面的结果来结束本节.\nlimited results 4 ## Conclusion: ML vs FOL ML是非经典逻辑中的“显学”, 而FOL则是经典逻辑中的常青树 yyds. 我们已经看到, 在模型层面, 「标准翻译」为我们比较模态公式和一阶公式提供了桥梁, ML可以被视为FOL的一个片段 —— ML可以被嵌入到 $FO^2$ 中. 而「互模拟」之于ML恰如「部分同构」之于FOL, 最终我们可以走向 van Benthem 刻画定理这一优美的结论. ML在此间亦显示出了表达了和计算复杂性上的均衡.\n另一方面, 由于模态有效性本质上是个二阶概念, ML和FOL所能刻画的框架类各有所长. Sahlqvist 公式和 Goldblatt-Thomason 定理是对应理论中著名的成果.\n下表给出 ML 和 FOL 就某些性质给出的一个不全面的比较:\nML FOL completeness 有不完全的逻辑 ✅ compactness ✅ ✅ Lowenheim-Skolem ✅ ✅ decidability ✅ ❌ bridge standard- -translation tool bisimulation isomorphism \u0026hellip; \u0026hellip; \u0026hellip; 最后谨以《蓝皮书》中的三个 slogans 结束此文：\nModal languages are simple yet ecpressive languages for talking about relation structures. Modal languages provide an internal, local perspective on relational structures. Modal languages are not isolated formal systems. 是以诸前辈罔莫孜孜而勤之, 吾夙夜以勉.\n# Ref. Blackburen et al. Modal Logic, 2001 Blackburen et al. Handbook of Modal Logic, 2007 van Benthem, Modal Logic: A contemporary view, IEP-webpage Acknowledgement 我曾从很多人那里学习过逻辑和模态逻辑. 感谢王轶老师将我引向模态逻辑; 感谢袁永锋老师和梁小龙师兄教授我递归论, 这推动我从不同的角度观看逻辑世界; 感谢陈锦盛老师重新燃起我对学术对热枕, 且我总能不时从您那里汲取到营养.\n感谢和我一起学习逻辑的诸同学们: 王莉菲, 李齐宣, 陈子豪, 覃立行, 李韵冰, 我从各位那里皆习得了不同的优秀品质, 以及共同渡过了一段遥远的且美好的时光.\n最后陈鑫感谢逻辑 —— 你(们)为其本无意义的人生平添了许多慰藉. Agian, Long Live Logic!\n(2023年7月10日整理于海琴六号, 时志鹏回乡工作, 祖平去云南游玩, 锦涛哥回重庆备考, 钟浩俊博诸人皆已离去. 叹, 「好梦由来最易醒」)\n本文存在的意义: dreams \u0026amp; hopes\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/07/%E4%BB%96%E4%BB%AC%E6%AF%95%E4%B8%9A%E4%BA%86/", 
      "title": "他们毕业了",
      "body": "7月1日，我的同学们大部分人都已经离校了，他们毕业了。\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/06/%E5%8C%97%E9%97%A8%E5%A4%96%E7%9A%84%E5%8F%AF%E7%88%B1%E5%B0%8F%E7%8B%97/", 
      "title": "北门外的可爱小狗",
      "body": "明天大家都要陆续走了，晚上出去买炸鸡啤酒，遇到北门外有条可爱的小狗，谢谢你小狗！\n小狗笑得真开心 好新的小狗 后来我将照片发在班级群里，说北门这有只小狗可以rua，然后小黄就发了如下三张照片（版权归小黄所有）： 小黄与小猫 说，谁还没有小猫小狗呢。哈哈哈，这该死的胜负欲🤣\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/05/notes-arend-heyting-intuitionism1971-unfinished/", 
      "title": "\u003eNotes\u003c Arend Heyting: Intuitionism(1971) [[unfinished",
      "body": " 你一旦被一个主题的美所打动，就得为之贡献你的一生！ 是啊！只是我怀疑像直觉主义这样不确定的东西中怎么会有美。 (哈哈，Heyting还挺毒舌的)\n每一个逻辑定理只是一个具有极端一般性的数学定理；也就是说，逻辑是数学的一部分，而决不能作为它的基础。\n先是一个探索者，然后才是哲学家。\n哲学家们常常谈论他们不完全懂的事情，那是他们的通病。\n朴素集合观：「任何谓词都有外延」。 层叠集合观：一个集合的元素先于该集合而存在。 "
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/04/a-new-life/", 
      "title": "A New Life",
      "body": "寻求一种新的生活方式。\n最近可能发生的很多事，比如延毕、论文毫无头绪等等。\n更重要的是, 诀别了一个陌生的朋友, 方才知道, 事在人为, 所谓聚散离合都不必用缘分做托辞。\n因此试想着探索一种新的生活方式。\n要用键盘打字的话就去海琴六号；\n要用纸笔书写的话就去图书馆(i.e. 屠猪馆)，且不知为何，图书馆的桌椅长宽高比例我觉得是最舒服的，对我来说完全可以久坐不累。\n最重要的是早睡早起，这点我相当佩服 韩煦 师兄。\nover\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/04/%E8%AF%97-spring-no.1-%E6%98%A5%E6%97%A5%E7%BB%84%E8%AF%97%E5%85%B6%E4%B8%80/", 
      "title": "\u003e诗\u003c Spring  No.1 春日组诗·其一",
      "body": "春日组诗·其一\n春天就像春天一样在春天里来临。\nSpring No.1\nSpring comes in spring like spring.\n「4月22日晚吃若海肠粉有感」\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/04/coding-functions-dimensional-reduction-attack/", 
      "title": "Coding Functions \u0026 Dimensional Reduction Attack",
      "body": "[编码函数与降维打击]\n今天(2023,04,21-周五)下午递归论课上突然讨论到一些问题, 关于编码函数、降维打击、宇宙和世界的连续性等问题，觉得特别有意思, 遂记之。\n(ps. 为方便偷懒，以下用 \\( \\omega, \\omega^+ \\) 分别表示自然数集和正整数集，毕竟 \\omega 比起 \\mathbb{N} 要少按很多下键盘了，不是咩😜)\n在递归论中，一个集合 \\( X \\) 是能行可枚举的 (effectively denumerable)，当且仅当，存在一个双射 \\( f \\colon X \\to \\omega \\) ，满足 \\( f,f^{-1} \\) 都是能行可计算的。 本文称这样的函数为 编码函数 coding funcion （注：在一些地方编码函数仅要求是单射即可，本文不讨论这个意义上的编码函数)。显然，若一个集合能行可枚举，则其编码函数可能不唯一。\n比如 \\( \\omega \\times \\omega \\) 和 \\( \\omega^+ \\times \\omega^+ \\times \\omega^+ \\) 都是能行可枚举的，这里依次给出二者的某种编码函数如下（来自 Cutland 19801, p.73）：\n\\( \\pi(m,n) = 2^m (2n +1) - 1 \\) \\( \\zeta (m,n,q) = \\pi (\\pi(m-1,n-1),q-1) \\) 而它们的反函数分别是：\n\\( \\pi^{-1} (x) = (\\pi_1(x), \\pi_2(x)) \\) \\( \\zeta^{-1}(x) = ( \\pi_1 (\\pi_1(x))+1, \\pi_2 (\\pi_1 (x))+1, \\pi_2(x)+1 ) \\) 其中 $$ \\pi_1(x)=(x+1)_1 \\qquad \\pi_2(x) = \\frac{1}{2}(\\frac{x+1}{2^{\\pi_1(x)}} - 1).$$\n这里对函数 $\\pi_1$ 做些说明。$(n)_1$ 是一个数，等于将 \\(n\\) 这个数进行质因数分解（prime factorization，任何自然数的质因数分解都是唯一的，这称为算术基本定理）后 $2$ 的幂。之所以 $n_1$ 中有下标 $1$，是因为 $2$ 是第一个质数（注意一般规定 $1$ 不是质数）。\n比如，$5 = 2^0 \\times 5$，因此 $(5)_1 = 0$，进而 $\\pi_1 (4) = (4+1)_1 = 0$；而 $\\pi_1(5) = (5+1)_1$，因为 $6 = 2\\times 3$，所以 $\\pi_1(5)=1$。类似地，$\\pi_1(7) = (8)_1 = 3$，$\\pi_1(9) = (10)_1=1$。\n\\(\\pi_1,\\pi_2\\) 都是从 \\(\\pi\\) 函数中提炼出来的。易证（其实也没那么容易的啦）上面所提及的函数都是能行可计算的。\n因此，像 \\( \\omega \\times \\omega \\) 和 \\( \\omega^+ \\times \\omega^+ \\times \\omega^+ \\) 这样的集合就可以被编码到 \\( \\omega \\) 中。通常可以不准确地称 \\( \\omega \\times \\omega \\) 和 \\( \\omega^+ \\times \\omega^+ \\times \\omega^+ \\) 是 \\( \\omega \\) 的某种高维化。因此，编码函数的一个直观作用就是将 \\( \\omega \\) 的高维化给降为一维，就像一个巴掌把一只蚊子🦟给拍扁了一样。\n上面所提及的集合有一个特点，它们都是可数的、可枚举的，或者更直观地说，是离散的。一个粗浅的认识可能是，无论一个集合呈现出几维，只要它是离散的，就总可以通过某个编码函数或（单射意义上的）嵌入函数将其「拍扁」到 \\(\\omega\\) 中。\n于是一个有趣的问题出现了。熟悉大刘《三体》的朋友可能对其中的「二向箔」印象深刻，作为一种武器，它可以将（三维）空间二维化，这种操作就是著名的「降维打击」(dimensional reduction attack)。\n那么从可计算的角度，「降维打击」是可能的吗？原则上，一个东西好像只要是离散的，我们总可以将其枚举，在这种意义上，任何离散的高维对象都能在可计算的意义上被「降维打击」。\n随之而来的是一个新问题，我们的世界是连续的还是离散的呢？连续的实体，比如 \\(\\mathbb{R}\\) 显然是非能行可枚举的，那么我们所处的宇宙呢？仅存的物理学常识使我相信，小于普朗克尺度下的物质是不可观测的，似乎就这种意义上来说，世界就是离散的呢。但这种认识论层面上所导致的「宇宙离散观」就是宇宙的本质吗？这犹未可知。\n另一方面，若宇宙真就是离散的，那么使之离散的部分由什么来填充呢？比如 \\((0,1)\\) 区间内的所有实数填补了 \\(1\\) 和 \\(0\\) 之间的离散与空虚。从这个意义上讲，如果宇宙真的就是离散的话，那么那些虚空的部分将会把整个宇宙分离开来。一个要点是，切莫把这种「虚空」和「真空」混为一谈，「真空」虽从概念上已经脱离了物质的成分，但它仍能产生某些「因果作用」。而真正的「虚空」是要将这仅存的因果关联都要剔除掉的嘞。因此，实在论者将会坚定地拥护「宇宙连续论」。\n总之，作为物理现实的「降维打击」可能是真实的，但在「可计算」的意义上将是不可接受的。这种浅薄的看法还有一个侧面，多数人都该认同思维和意识的连续性，如若不然，我们又如何填补人类灵魂和精神上的虚空呢？这将又是另一个故事啦。\n（手稿）\nNigel Cutland: Computability: An introduction to recursive function theory, Cambridge University Press, 1980\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "href": "http://nixnehc.github.io/misc/duoduo/", 
      "title": "/ᐠ｡ꞈ｡ᐟ\\ DuoDuo /ᐠ–ꞈ–ᐟ\\",
      "body": "DuoDuo is a very cute kitty, he is my partner, my all tenderness, and the fluffy dream in my life!\n\u0026gt;v\u0026lt; 小多多精选集 上线啦👏👏👏 2023年4月最新消息：力颖告诉我小多多找到一个好人家了，希望它以后健健康康 : ) # 小多多靓照: duoduo\u0026rsquo;s head\nduoduo\ncute duoduo\nDuoDuo with me 1\nDuoDuo with me 2\nDuoDuo with me 3\n我拍的最后一张小多多的照片： my duoduo duoduo 猫生大事：小多多变“公公”啦！ 新成员：小多多"
    },
    {
      "href": "http://nixnehc.github.io/misc/two-queens/", 
      "title": "My Two Queens",
      "body": "I love insect, especially the ants. I have two ant farms.\nddddd\nddddd\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2023/01/%E5%92%8C%E4%B8%83%E5%93%A5%E7%9A%84%E5%AF%92%E5%81%87%E6%97%85%E8%A1%8C/", 
      "title": "和七哥的寒假旅行",
      "body": "今年过年总算回家了，和久违的七哥在铜仁市区逛了很久，有好几年没去大十字那边，已经全然变了模样。正值春节，这边很是热闹，川硐上面一比就格外冷清。\n一起的还有冯新，他现在在烟草局上班，听他说很是悠闲，钱多假也多，妈的，真是令人羡慕的工作。后来我和七哥开车去了南长城、凤凰玩了一圈，冯新去大理了便没有同行。\n搞笑的是，后来七哥妈妈打电话催他回去相亲，听说那女孩子漂亮得不得了，七哥一听眼睛都直了，真是没出息，我只得送他回家，这样旅行便草草地结束。可惜最后也没相成，追问其缘由，竟是嫌女方学历略低，和他这个所谓的研究生不相匹配，还有就是女方太漂亮，七哥怕他hold不住。瞧瞧这是什么狗屁话。\n不过想来也是有趣。我和七哥的友谊也很有意思，我们一般都是互损，很难夸对方几句。当年七哥去了贵大，而我则固执地去了东北，从我们高二相识距今快十年矣。七哥的发际线愈发出息了，在他没秃之前能否还有这样的游玩机会呢？一切犹未可知罢。\n# 铜仁大十字、老街 在铜仁逛了颇多地方，去了东山寺还有一些新修的古不古今不今的建筑，最后还看了《流浪地球2》。\n孔子 东山寺～该寺就在以前老铜中后面，我记得第一次去这个地方是和任廷欢去的 舞龙灯片段：龙灯\n老街 确实还挺好看滴 (ps. 蓝波湾电影院太破了，拉黑) # 南长城 南长城湖南和贵州交界处，以前坐车的经常可以看到烽火台，但从没有真正爬上去过，这次算第一次去。途中闹肚子还去山上疏通了下🤣 体验的话非常不好，脏乱差全包了，白白浪费了这么好的景色。咱就是说，再也不去了。。。 不过看它的历史的话还是挺感慨的，我们的先民在这片土地上的生存、耕种、战斗。\n开车去的路上：1 2 3 (七哥拍的是啥玩意😵‍💫)\n南长城简介： 入口： 七哥和我·毋需解释，发少者为七哥 远眺 # 凤凰 从南长城下来后又驱车去了凤凰，凤凰现在好像都不要门票了。 这里以前叫「镇杆」，至今仍不知道「凤凰」其名怎么来的。 我一共来过三次凤凰，高中一次，拿到驾照的那天和妈妈驱车来一次，现在又是一次。\n若是看过电影《边城》的话，应该会对现在的商业气质很失望，凤凰再也没有「翠翠」了，只有沱江边的伪吊脚楼中的酒吧。\n沱江一景·很出名的石墩桥，电影《边城》有此景 江边塔 风雨桥 \u0026#43; (伪)苗族服装 三王庙 三王庙中远眺 偶遇小猫咪 这小猫咪颜值真不错·比我和七哥强多了 虽然老沈当年泡妞的这句话已被少男少女说烂了，不过每每看到还是会心头一颤 凤凰城题字 远阁 虹桥·看看外面还好，里面全是卖东西的 冬季枯水期的沱江 沈从文故居·因为我俩买不起门票，所以只能在门外看看 弦月与远阁 最后用一张七哥的大脑门结束此文吧：\n发际线～危 "
    },
    {
      "href": "http://nixnehc.github.io/misc/two-dogs/", 
      "title": " ▼(´ᴥ`)▼ 两只名叫「狗」的狗 ▼・ᴥ・▼",
      "body": " The word dog does not look like a dog, walk like a dog, or woof like a dog, but it means \u0026ldquo;dog\u0026rdquo; just the same. [Steven Pinker, The Language Instinct]\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2022/10/%E4%B8%8E%E8%B7%86%E4%BF%B1%E5%90%8C%E5%AD%A6%E7%88%AC%E5%87%A4%E5%87%B0%E5%B1%B1/", 
      "title": "与跆俱同学爬凤凰山",
      "body": ""
    },
    {
      "href": "http://nixnehc.github.io/posts/2022/04/%E8%BD%AC%E8%BD%BD-%E4%B8%A5%E9%85%B7%E7%9A%84%E7%8E%B0%E5%AE%9E/", 
      "title": "\u003e转载\u003c 严酷的现实",
      "body": "[序]我最早是在网易云的播客中听到此文的，具体的时月早已忘记了，但对其印象很深，在脑中久久不能忘却。后来在中珠图书馆中偶然发现了原文，是收录在高等教育出版社 2010 年出版的《解码者：数学探秘之旅》中的。我之后借阅了该书，这本书里面都是数学家们写的随想和短文，语言清新优美，平淡自然却韵味深远，还有很多人物照片，最重要的是也有小猫猫的图片🥳。在看完整本书后，我还是尤为喜欢孔涅的《严酷的现实》这一篇，其中十分让我感动话是：\n最为重要的事情，就是成为自己的权威。\n希望我也能早日成为自己的权威！基于这样的理由，我将全文抄录在下面。\n[严酷的现实] 引言 本文描述一种与数学之间的非常个人化的关系。我们不要忘记，每一位数学家都是一个「特例」。以下所述内容，都只涉及它的作者，在任何情况下都不应被认为是「一般」的观点。\n在我看来，数学首先是最精致的思维工具，是概念的发生器，有了数学，我们可以理解各种事物、尤其是理解我们身处其中的这个世界。新的概念，就是通过在思想的熔炉中长期精炼才产生出来的。\n将数学划分为一些独立领域的想法最初是吸引人的，例如几何是研究空间的科学，代数是符号运算的艺术，数学分析则使我们理解无限和连续的概念，还有数论，等等。但是，这并没有考虑到数学世界的一个本质特征，也就是说，不可能将它的某一部分不伤筋动骨地隔离出来。\n叛逆行为 在我看来，关于数学首先要知道，我们无法通过学习成为数学家，而是通过做数学才能成为数学家。因此，重要的并不是「学问」，而是本领。当然，知识是绝对必要的——完全没有必要抛弃前人所获得的成就, 但是，我始终认为，努力地思考一个几何问题比起半生不熟地积累所谓知识来可以让人有更大的进步。\n这样，在我看来，我们或多或少是通过某个反叛行为才开始成为数学家的！\n这话怎么讲呢？它的意思就是，未来的数学家将开始对某个问题进行思考，然后他会明白，实际上他在文献资料和书籍当中所读到的，并不符合当他面临问题时的个人看法。当然，很多时候这是因为没有学到家，但是这并不重要，只要他的观点是建立在他的个人直觉以及证明的基础上就行了。此时他将明白，在数学里面没有权威！如果一个十二岁的学生能够证明自己的论断，就完全可以在他的教师面前坚持己见，并且正因为如此，才能够让数学与其它学科相比显示出它的独特之处。在那些学科里，教师很容易以学生所不具有的知识作为挡箭牌。一个五岁的孩子可以对他父亲说「爸爸，没有最大的数」，并且对此十分肯定，这并不是因为他在书中看到过，而是因为他在头脑当中已经论证过了⋯⋯对于善于按照规则进行探索的人来说，这里有着广阔的自由空间。\n最为重要的事情，就是成为自己的权威。也就是说，为了理解某些事情，不要立刻去尝试确认这是否写在某本书里。不要！这样做只会延迟独立性的觉醒。需要做的事情，是在他的头脑当中验证这是否是真的。从我们明白这一点的时刻开始，我们就可以逐渐地去了解熟悉数学王国的某个很小的部分，并且从此开始在这个王国的神奇领地上以自己的方式进行一次长途的寻宝之旅。\n诗情荡漾 我们可以说，数学家的工作当中有两个方面，一方面在于证明、验证，等等，它要求全神贯注，要求高度的理性主义；然而幸运的是，还有另一个方面，眼光！眼光这个东西，有点像是受到直感的驱使而得到的，它并不服从某些确定性，却更像是一种诗歌性质的有趣的东西。简而言之，在数学发现当中有着两个时间阶段。在第一个阶段里，还无法以推理的方式用公式化语言来明确表达出直觉。在这个阶段里，重要的是眼光！这并不是静态的那一方面，而是一种诗情荡漾的境界。\n这种诗情荡漾几乎无法用话语来传达。可以毫不夸张地说，一旦当我们尝试将它说出来的时候，我们就会使它变成石头；而且我们会丧失这种动感，而它在数学发现当中是至关重要的。\n然后，当我们理清了问题的足够多的方面时，并且当我们认识到这种眼光最终帮助我们解决问题时，事情就会发生变化。例如，当我开始成为数学家时，在我所有的发现当中最让我感到震动的一件事就是（那是我在雅克·迪斯米埃的指导下准备博士论文时期），一个非交换代数随着时间在发生变化！我所证明的是，实际上，一个非交换代数都有一个随时间的演化，这个演化是完全典则的。更加准确地说，Tomita 理论所定义的演化依赖于某种态，实际上这种演化只是在模掉内自同构的意义上才依赖于这个态；这些内自同构是平凡的，不存在的。因此，这里所展示的，就是这种非交换性生成了时间！而且是从虚无当中生成的！如此简单！就是这样！当然，立刻由此得出的结果就是，一个代数会包含大量的不变量，例如它的周期，也就是说，使演化成为平凡所需的时间 \\( t \\)。但是，尽管这些结果完全是可以公式化表达的和可以传达的，却并不会耗尽它们诗歌般的内容，也不会耗尽将最初的新发现付诸行动时的精彩之处。\n数学现实 我对有些诗人非常欣赏，例如伊夫·博纳福依【 Yves Bonnefoy，法国诗人和散文家】，这是由于他们在方法论层面上与数学相近。在我看来，数学家与诗人的不同之处，在于诗人所使用的原材料是人类经验中的物质现实。诗词的主要成分，是一个人的内心世界和外部现实之间的冲突，这种冲突之激烈总是使得我们震惊。而数学家的航程，则是在另外一个地理空间中、另外一个景观中的旅游。在此期间，他会碰到另外一种现实。这种数学现实与我们身处其中的物质现实同样严酷而坚固。这个眼光部分对于数学家真正做数学来说是不够的。也就是说，相比眼光部分，在论证之后随之而来的阶段里，有着一段不确定的令人痛苦的时间，总是担心会搞错。这有点像从陡坡上下来时，我们必须不停地往下看······我们也总是在不停地对自己说「瞧，我本来会在这里出错的，或许我已经搞错了」。谁知道呢，我们总是在担心！我们可能会经历数小时可怕的惶惶不安的时间，正是因为我们遇到了一个真正的现实。因此，这不是普通意义上的现实，而可能是更加严酷的现实。\n这样一来，真理的概念用到了另外一个世界，它并不是人类在其外部现实当中所经验的世界，而是数学现实的世界。需要理解的关键点是，无数的数学家们花费一生的心血致力于发现这一世界；对于这个世界的轮廓和联通性，他们的意见是一致的：无论它的生命行程源自何处，如果说这一行程足够遥远，如果我们时刻警惕不被禁闭在某个特殊区域里面的话，迟早有一天，我们会到达这些众所周知的城堡当中的某一个，例如椭圆函数、模形式、ζ 函数，等等。「条条道路通罗马」，数学世界也是「连通的」。当然，这并不意味着所有这些部分都相似。格罗腾迪克【注：Alexandre Grothendieck，1928—2014，20世纪最有影响的数学家之一，1966年菲尔茨奖获得者，1988年克拉福德奖获得者，他拒领该奖】在他的《收获与播种》当中，这样描述了一幅他从分析出发，最终来到代数几何的过程中所经历的景象：\n我仍然记得这个吸引人的印象（当然，这完全是主观的），就像是我离开了令人厌恶的干旱荒原，突然发现自己来到了一个华丽繁茂、遍地流金的「富裕地带」，到处都充斥着无穷无尽的财富，这里令人禁不住伸出双手，去采摘果实或者开发宝藏。\n——亚历山大·格罗腾迪克\n伽罗瓦 从某种意义上来说，伽罗瓦所领悟的，或者说真正的现代数学的起点，就是必须有能力超越演算。也就是说，不要去进行演算，而是在思想里面进行演算！要明白这些演算的本质将会是什么，将会出现的困难是什么，等等，但是并不真正地去进行具体的演算，从而理解它的结果将会是什么形式的，该结果将会有什么对称性。因此，要超越这种外表形式；如果我们不加警惕的话，就很容易被困于其中。需要尝试从高处着手去摆脱困境，在对称性方面进行思考，等等。\n双脚并拢，跳过这些计算；将那些运算加以组合，按照它们的困难程度而不是按照其形式进行分类；在我看来，这才是我们的任务。\n——埃瓦里斯特·伽罗瓦\n当伽罗瓦的前辈们探求某个方程的根的对称函数时，他自己却开始打破这种对称性，以便看清楚将会发生什么⋯⋯ 他的出发点是选择这些根的任意一个没有任何对称性的函数。奇妙之处就在于，他从这个根的函数所推导出来的不变群，实际上独立于最初的任意选择。\n伽罗瓦的想法一点也不过时，它们仍然滋润着当代数学，只是因为这些想法简单明了并且引起了变动。格罗腾迪克所创立的主题理论可以看做是伽罗瓦的理论在大于 0 维时的某种自然推广，也就是说，如果我们愿意的话，它是在多变量多项式情况下的推广。这些在目前的发展，就像伽罗瓦理论的发展一样，是伽罗瓦思想的活力之所在。这里，需要引用他的遗嘱的结尾部分。\n我亲爱的奥古斯特，你知道，这些课题并不是我所探索的全部内容。某段时间以来，我的主要思索集中在不确定性理论在超越分析方面的应用。这需要事先就明白，在超越数量或者超越函数之间的关系当中，我们可以进行怎样的互换，我们可以用哪些数量来替换那些所给定的数量，同时保持这种关系。这立刻就会使我们所可能寻找的许多数学表达式变得不再可能了。但是，在这个广阔的领域内，我没有时间了，我的想法也还没能足够成熟。\n——埃瓦里斯特·伽罗瓦\n代数与音乐 在我看来，对于一个孩子来说，关键是很早就开始让他接触音乐。我认为，让一个孩子在五六岁的时候接触音乐，可以适当减弱他在视觉智能方面的优势，这种视觉智能是很奇妙的、纯视觉的天赋，孩子很早就能获得，实际上它与几何相联系。音乐可以通过代数将它加以平衡，也就是说，音乐与时间有关，正如代数与时间有关一样。在数学当中，存在着这种基本的二元性。一方面是几何，它对应于大脑的视觉区域，并且是一种瞬时的即刻的直觉。在这里，我们看到了一种几何图像，嘣！就是它，这就是一切，甚至不需要我们去解释，我们不想去解释。然后是另一方面，那就是代数。代数，它和视觉一点关系也没有，相反，它具有时间性，与时间有关！这就是演算之类的东西。这就是某种变化着的东西，并且是某种和语言非常接近因此具有语言的奇妙精确性的东西。而且，我们可以通过音乐来认识到这种代数所产生的力量。因此，对于我来说，在如此感受到的音乐和代数之间，确实存在着一种奇妙的默契。例如，我酷爱肖邦的一些序曲，因为我发现，它们恰好具有这种美妙的凝聚性和精练性。在一间屋子里聆听这种音乐，就像窗户被一阵风突然吹开，然后，又从另一个方向重新关上。从某种意义上来讲，这就是要将一种思想以它最清晰、最纯粹的形式凝聚出来 ——— 这就是它：代数。\n建议 我以几个「实际」的建议来结束此文：\n散步 当我们面临非常复杂的难题的时候（常常需要进行演算），有一种很好的实用方法，那就是外出长时间地散步（不带纸和笔），并且在头脑当中进行演算（这时，需要忘记「这样做太复杂了」的最初印象）。即使我们后来没有成功，它也会形成「鲜活的记忆」，并磨练智力。\n床上思考 一般来说，数学家们最大的问题，就是让自己的配偶明白，他们在工作当中最全神贯注的时刻，就是在黑暗中当他们在床上睡觉的时候。不幸的是，计算机屏幕和电子邮件对他们的侵犯，使得这种自我集中的方式使用得越来越少；而这种方式以后只会越来越显其珍贵。\n勇敢 在数学发现当中有两段时间，在一段时间里需要勇敢：需要沿着峭壁往上爬，并且绝对不要往下看 ——— 为什么呢？因为如果你开始往下看，你就会说：「是的！当然是这样的，某个人已经研究过这个问题了，他没有能够解决它，那么我也就没有任何理由能够解决它。」然后，你将找到上百条合理的理由，它们会阻止你往上爬。因此，需要彻底地撇开它。从某种意义上来说，需要「保护自己的无知」，以便能够孕育出某个想法，而不是在它尚处于意识里的某一个 \\( t \\) 时刻时就使它夭折了。\n承受压力 在数学家的生活里，常常有这种情况出现（往往是在开始的时候），由于竞争激烈，他们遇到了某些困难。例如，我们收到了某个竞争者的「预印本」，其课题与我们正在进行的研究相同，因此我们感受到了压力，急于发表论文。在这样的情况下，我所了解的唯一解决方法，就是尝试将这种沮丧情绪转化为能量，去更加努力地工作。\n不图认可 很久以前，我的一位同事向我透露说：「我们数学家的工作，就是为了得到很少几个朋友的吝啬的认可。」是这样的，研究工作本质上就是孤独的，研究者会感到需要以这种或者那种方式得到认可。说实话，关于这一点，只有唯一的一个评判者是重要的，那就是自己。并且，我们没有办法去违背自己。过于在意别人的观点，简直就是在浪费时间。到目前为止，没有任何一个定理是由全体投票来得到证明的，正如费曼所说的：「为什么你要在乎别人的想法呢！」\n（阿兰·孔涅）\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2022/01/%E6%B8%B8%E6%B7%87%E6%BE%B3%E5%B2%9B/", 
      "title": "游淇澳岛",
      "body": ""
    },
    {
      "href": "http://nixnehc.github.io/posts/2021/03/%E7%88%AC%E6%9D%BF%E9%9A%9C%E5%B1%B1/", 
      "title": "爬板障山",
      "body": "先贴照片吧，游记以后再写\n大道尽头就是拱北口岸 静雯·杭冉·石璐·刘琳·睿姝·俺·祖平·俊博 前中戴帽者为小黄 "
    },
    {
      "href": "http://nixnehc.github.io/posts/2021/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%90%83/", 
      "title": "第一次吃🥥🐓",
      "body": "太好吃了 👏👏👏\n广东人民做饭真有点东西\n椰肉好吃嘎😍 还有那个猪肚鸡 🐖🐓🍗🐥，吃法太有创造力力，忘拍了😢\n哼，什么时候才能给广东人民一定小小的折耳根震撼嘞🤔\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2021/01/%E7%A7%91%E5%93%B2%E5%AE%8C%E7%BB%93%E4%BA%86/", 
      "title": "科哲完结了",
      "body": "结课了 今天是2021年1月七日，这是最后一节科哲课了。很高兴和大家渡过充实的一学期呢。\n元旦快乐🎉🎉🎉 今天是2020年的最后一天了，买了点东西，下午看电影《超能陆战队》（小黄找的资源），然后晚上上科哲\n姗姗来迟的小黄\n电影终于看完了 晚上祖平的报告·图灵机\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2020/10/%E8%AF%97-%E6%88%91%E4%B9%9F%E5%A4%B1%E6%81%8B/", 
      "title": "\u003e诗\u003c 我也失恋",
      "body": "我也失恋\n我所爱兮在荔枝\n欲往寻之叶繁茂\n草涧绊脚头恍惚\n我赠爱人纸蝴蝶\n她回什么：太丑了\n从此翻脸不理我\n不知何故兮使我哀怜\n我所思兮在月高\n欲往探之无鹊桥\n仰头惨云掩我眼\n我赠爱人踟蹰歌\n她回什么：甚难听\n从此翻脸不理我\n不知何故兮使我烦纡\n我所念兮在瑶台\n欲往从之无仙术\n辗转涕泪泣染襟\n爱人赠我好人卡\n回她什么：砒霜药\n从此翻脸不理我\n不知何故兮我貌累累\n我所弃兮在莽莽\n欲往唤之风飒飒\n雪之雰雰尤无日\n爱人托我朱砂痣\n回她什么：轩辕剑\n从此翻脸不理我\n不知何故兮——我自去罢！\n仿鲁迅《我的失恋》及张衡《四愁诗》而作打油，聊以自慰自勉。\n二零二零年十月十七日午于珠海⛰️大山🗻中学🏫 屠🔪猪🐷馆（图书馆）\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2020/06/terminal/", 
      "title": "Terminal",
      "body": " 一些常用的终端命令：\nclear: 清空当前 terminal 中显示的命令 history: 显示历史指令 cd: 进入目录 pwd: 显示当前目录 ls : 显示当前目录中的文件 mkdir: 创建新的 directory 一些 css 口诀\npadding magin: 8px 16px 24px. font-size: 12px 14px 16px color: #333 #666 #999 Sublime Text 配置 Sublime Text 是一款优秀的、轻量的且跨平台的文本编辑器。谁用谁知道。\n# snippet 代码片段 Snippets 是可以复用的代码片段模板，输入触发词后按 tab 键就可以得到预制的代码内容。 这个功能可以帮助我快速输入大量重复内容，极大提高写作效率。\n新建 Snippet，选择菜单：Tools-\u0026gt;Developer-\u0026gt;New Snippet. 随后 Sublime Text 会生成一个 Snippet 模板。\n\u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ Hello, ${1:this} is a ${2:snippet}. ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;!-- \u0026lt;tabTrigger\u0026gt;hello\u0026lt;/tabTrigger\u0026gt; --\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;!-- \u0026lt;scope\u0026gt;source.python\u0026lt;/scope\u0026gt; --\u0026gt; \u0026lt;/snippet\u0026gt; 将该模版做如下修改：\n\u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ Hello, ${1:this} is a ${2:snippet}. ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;hello\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;scope\u0026gt;source.python\u0026lt;/scope\u0026gt; \u0026lt;/snippet\u0026gt; 简单介绍一下各节点含义：\ncontent 节点内容表示实际的代码片段。 tabTrigger 节点内容表示用来输入代码片段的快捷字符串，即触发词。 scope 节点内容表示代码片段会在哪种上下文环境下激活, 比如上面代码定义了 source.python, 意思是这段代码片段会在python语言环境下激活。注意：Scope不是文件扩展名，可以从菜单：Tools-\u0026gt;Developer-\u0026gt;Show Scope Name 查看当前文件扩展名对应的Scope。 把修改后的模板保存为文件 hello.sublime-snippet（保存目录保持默认打开的目录即可）。 该模版实现的功能是，在 python 环境下，在文件中输入 hello，按下 Tab 键， 则立刻会在编辑器中得到 Hello, this is a snippet。\n## 一个常见问题： 针对 Markdown 文件的 Snippet 没有出现在自动补全列表中。 解决办法是选择菜单 Preferences-\u0026gt;Settings，在右侧的窗口中增加如下设置：\n\u0026#34;auto_complete_selector\u0026#34;: \u0026#34;meta.tag - punctuation.definition.tag.begin, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc, text\u0026#34;, 附常见语言对应 Scope值：\nC#: source.cs C++: source.c++ CoffeeScript: source.coffee CSS: source.css Go: source.go Haskell: source.haskell HTML: text.html(.basic) JSP: text.html.jsp Java: source.java Java Properties: source.java-props Java Doc: text.html.javadoc JSON: source.json Javascript: source.js BibTex: source.bibtex Latex Log: text.log.latex Latex Memoir: text.tex.latex.memoir Latex: text.tex.latex TeX: text.tex LESS: source.css.less Lisp: source.lisp Lua: source.lua MakeFile: source.makefile Markdown: text.html.markdown Multi Markdown: text.html.markdown.multimarkdown Matlab: source.matlab Objective-C: source.objc Objective-C++: source.objc++ OCaml campl4: source.camlp4.ocaml OCaml: source.ocaml OCamllex: source.ocamllex Perl: source.perl PHP: source.php Regular Expression(python): source.regexp.python Python: source.python R Console: source.r-console R: source.r Ruby on Rails: source.ruby.rails Ruby HAML: text.haml SQL(Ruby): source.sql.ruby Regular Expression: source.regexp RestructuredText: text.restructuredtext Ruby: source.ruby SASS: source.sass Scala: source.scala Shell Script: source.shell SQL: source.sql Stylus: source.stylus TCL: source.tcl HTML(TCL): text.html.tcl Plain text: text.plain Textile: text.html.textile XML: text.xml XSL: text.xml.xsl YAML: source.yaml 由此可知，markdown 对应的 scope 值是 text.html.markdown。\n下面我们来设置两个在 markdown 常用的 snippets：行内公式和行间公式。\n首先，行间公式。 选择菜单：Tools-\u0026gt;Developer-\u0026gt;New Snippet. 照如下修改：\n------ display_formula ------ （复制时不要复制这一行） \u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ \\\\\\[ ${1:display_formula} \\\\\\] ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;dmath\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;scope\u0026gt;text.html.markdown\u0026lt;/scope\u0026gt; \u0026lt;/snippet\u0026gt; 然后将文件按默认路径保存为 display_math.sublime-snippet 。\n其次，行内公式。 选择菜单：Tools-\u0026gt;Developer-\u0026gt;New Snippet. 照如下修改：\n------ inline_formula ------ （复制时不要复制这一行） \u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ \\\\\\( ${1:inline_formula} \\\\\\) ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;imath\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;scope\u0026gt;text.html.markdown\u0026lt;/scope\u0026gt; \u0026lt;/snippet\u0026gt; 然后将文件按默认路径保存为 inline_math.sublime-snippet 。\n这样，以后再用 sublime text 编写 markdown 文件时， 只需要 输入 dmath 和 imath 再按下 Tab 键，就可以在编辑器中得到行间公式和行内公式的输入环境了：\n# dmath + Tab 得到： \\\\[ display_formula \\\\] # imath + Tab 得到： \\\\( inline_formula \\\\) 在制定 snippet 的时候，我发现若在 content 节点中输入美元号 $ 则不起作用，具体原因未知。 因此这里用 \\\\[ \\\\] 作为行间公式的输入环境。\n注意，KaTeX 默认的解析规则是 \\\\( \\\\) 环境下的行内公式输入，不支持 \\$ \\$ 作为行内公式环境； 但是 MathJax 则对于这两种模式都支持。（总的来说，KaTeX 和 MathJax 区别并不大，不过前者更快，而后者包含的内容更丰富）\n# 设置在新标签页打开文件而不在新窗口中打开 preferences --\u0026gt; Settings ，在右侧窗口添加 \u0026quot;open_files_in_new_window\u0026quot;: \u0026quot;false\u0026quot;, 既可。\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2/01/latex-from-zero-to-hero-basic-setting/", 
      "title": "\u003eLaTeX\u003c  From Zero to Hero (Basic setting)",
      "body": " (so cute lion, isn\u0026rsquo;t it? ©)\n[\\LaTeX{}：从入门到入土]\nThis page is a crash course on $\\LaTeX{}$ for myself.\n一些常见文件后缀说明\n.tex: TeX 源文件 .sty: 宏包文件，用 \\usepackage{} 命令导入；宏包名与文件名一致 .cls: 文档类，用 \\documentclass{} 命令导入；文档类名称与文件名一致 .log: 编译日志 .toc: 存放章节名称，在下一次编译时读入以产生目录 .lof: 类似于 .toc，生成插图目录 .lot: 生成表格目录 .aux: 存放各种标签引用信息，生成交叉引用 .bbl: 参考文献记录文件 .blg: 参考文献编译日志 .bst: 参考文献格式模板 .bib: 参考文献数据库文件 .out: hyperref 宏包生成的 pdf 书签记录文件 一些终端命令：\nlatex -v xelatex -v ##查看版本号 tlmgr update --all ##或者 tlmgr update --self--all ##更新所有宏包 texdoc ctex ##打开 CTEX 宏包手册，可以用 texdoc 命令查看任何说明文档 texdoc lshort-zh ## 打开《一份(不太)简短的 LATEX2ε 介绍》 texdoc graphicx ## 获取有关插图方面的帮助 ## 支持的插图格式有: eps,pdf,png,jpeg,bmp 特殊字符/标志：\n\\textbackslash : 反斜杠 \\\n\\dag : $\\dag$\n\\copyright : $\\copyright$\n\\TeX{} : $\\TeX{}$\n\\LaTeX{} : $\\LaTeX{}$\n[Basic \\;Settings] # short document 对于较短的文档 (如论文、作业等)，可以参照如下配置。其中的宏包 cx.sty 是私人定制的，里面包含了一些常用的数学宏包、字体设置等，稍后会对其内容做详细地说明。\n1 \\documentclass[UTF8, 11pt, a4paper]{article} % 声明文档类 2 % 文档类是一个提前设计好的用于排版某种特定格式的latex宏集，类似于 Office 中的模版。 3 4 % 加载自己定义的宏包，字体设置等在这个包里 5 \\usepackege{cx} 6 7 % 设置页边距： 8 \\usepackage{geometry} 9 \\geometry{a4paper,left=2.5cm,right=2.5cm,top=2cm,bottom=2cm} 10 11 % 设置行距、段距 12 \\linespread{1} % 1 倍行距 13 \\setlength{\\parskip}{0.5em} % 段间距 14 15 % ======================================== 16 \\title{ The Title} 17 \\author{first author \\\\ second author} 18 \\date{} % 如需显示日期，在 {} 内填入 \\today 或指定的日期 19 20 % ================ 导言区结束 =============== 21 \\begin{document} 22 \\maketitle % 显示标题 title 23 % ============================================ 24 \\tableofcontents % 生成目录 25 26 %\\listoffigures % 可生成 图表目录 27 %\\listoftables 28 % 以下设定可以使得生成的图表目录中有前缀 “表” 和 “图”， 29 % 如果用上面的两个命令则没有 30 { \\let\\oldnumberline\\numberline 31 \\renewcommand{\\numberline}{\\figurename~\\oldnumberline} 32 \\listoffigures 33 } 34 { \\let\\oldnumberline\\numberline 35 \\renewcommand{\\numberline}{\\tablename~\\oldnumberline} 36 \\listoftables 37 } 38 39 % ================ 正文开始 ============== 40 41 \\section{ section xxx} 42 43 \\subsection{ subsection xxx} 44 45 \\subsubsection{ subsub....} 46 47 % ============ 参考文献 bibliography ======== 48 \\newpage % 新页面（如不需要将参考文献另起一页，则注释或删去这行） 49 \\bibliographystyle{plain} % 设置参考文献风格，详见有关文档说明 50 \\bibliography{/Users/chenxin/Desktop/chenxin.bib} % bib文件地址 51 % ================================================================== 52 \\end{document} # long document 大型项目 对于偏长的文档，如书籍、毕业论文等，使用一个 .tex 文件有时会太臃肿了，所以一般将一个长文档（按「章节」或「部分」）拆分为多个 chxx.tex 文件，然后再用 \\input{} 或者 \\include{} 命令将它们插入到主文档 main.tex 中。\n一个大型项目的目录举例如下：\n----- your project ---- ~/your-project/ % ls ├── ch1/ └── ch1.tex # 存放第一章的内容 ... ├── chxx/ └── chxx.tex # 存放第xx章第内容 ├── img/ # 存放所有插图 ├── cx.sty # 配置自己常用的宏包 ├── main.tex # 主文档 ├── main.pdf # 生成的pdf 文档 └── xxx.bib # 参考文献 # 未列出的还有tex生成的其他文件（如日志、引用样式等） 而其中的\nchxx.tex 文件只需以 \\chpter{} 开头即可：\n1 % chxx.tex 这是第xx章第内容 2 % 如果使用的文档类不是 report 或者 book 的话，则不能使用如下 \\chapter{} 命令， 3 % 可以改用 \\section{} 4 5 \\chapter{ the title } 6 7 % ======== 8 \\section{} 9 10 \\subsection{} 11 12 % ======== 13 \\section{} 而其中的 main.tex 可参考如下设置：\n% =========================================== % My template for long document % =========================================== \\documentclass[UTF8,12pt,a4paper]{report} % 在 report 或 book 文档类可以用 \\chapter 命令 \\usepackage{cx} % 加载自己定义的宏包 % 设置页边距： \\usepackage{geometry} \\geometry{a4paper,left=2cm,right=2cm,top=1cm,bottom=2cm} % 行距、段距设置 \\linespread{1} % 1 倍行距 \\setlength{\\parskip}{0.5em} % 段间距 % 设置全文脚注连续编号 \\counterwithout*{footnote}{chapter} % ####### 以下设置本文中常用的缩写 ######### \\newcommand{\\da}{\\downarrow} % 混合语言中的 down arrow \\newcommand{\\h}{\\mathcal{H}} % 混合语言 H (美术体) \\newcommand{\\nom}{\\mathsf{NOM}} % 专名集 (无衬线体) % 框架 和 模型 (哥特体字母) \\newcommand{\\F}{\\mathfrak{F}} \\newcommand{\\M}{\\mathfrak{M}} \\newcommand{\\T}{\\mathfrak{T}} \\newcommand{\\G}{\\mathfrak{G}} \\newcommand{\\Prop}{\\mathsf{Prop}} % 命题变元集 (无衬线体) \\newcommand{\\K}{\\mathbf{K}} % 极小正规逻辑 K (粗体) \\newcommand{\\iffd}{ :\\Leftrightarrow } % 定义中的 iff 符号 % rule \\newcommand{\\der}{ \\; / \\;} % der is derivation % e.g MP: \\varphi, (\\varphi \\to \\psi) \\der \\psi % 模型操作 (cf. 模态蓝皮书) \\newcommand{\\dju}{\\biguplus_i} % disjoint union \\newcommand{\\gsm}{\\rightarrowtail} % generated submodel \\newcommand{\\bm}{\\twoheadrightarrow} % bounded morphic image \\newcommand{\\meq}{\\leftrightsquigarrow} % modal equivalence % ===================== 标题部分 ================ \\title{ the Title } \\author{ your name} \\date{} % 或者 \\date{\\today} % ===================== 导言区结束 ================ \\begin{document} \\maketitle % 生成标题 % =============================================== 这是前言页 the preface page % =============================================== \\tableofcontents % 生成目录 % =============== 以下插入各章节的内容 =============== % !!!: 相对路径不要用 `./chxxx/xxx` 这种形式，会出奇奇怪怪的问题 % 可以不写文件后缀 .tex \\input{ch1/ch1.tex} \\input{ch2/ch2.tex} \\input{ch3/ch3.tex} \\input{chxxxx/chxxxx.tex} % ============== \\input 和 \\include 的区别： % \\include{\u0026lt;filename\u0026gt;} 在读入 \u0026lt;filename\u0026gt; 之前会另起一页，有的时候我们并不需要这样。 % 用 \\input 命令，它纯粹是把文件里的内容插入; % 总的来说，写书籍类的文稿用 \\include{}, 而文章等短文稿用 \\input{} % ==================== 参考文献 =================== \\newpage \\bibliographystyle{plain} \\bibliography{/Users/chenxin/Desktop/chenxin.bib} % =============================================== \\end{document} ## 一些小问题 当我们创建好 ch1.tex 且将其 \\input 到主文档 main.tex 后，此时编译主文档，如果顺利的话 就一切正常。不过当首次单独编译 ch1.tex 时可能会报错（原因未知）， 一个解决方案是先关闭所有文件，然后再打开，这时再单独编译 ch1.tex 就会正常了。\n注意，单独编译 ch1.tex 并不会生产独立的 pdf 文件。如果想达到这种功能，见后续的 post.\n# 私人包定制 cx.sty 文档中是一些本人常用的包和命令缩写，并不具有普适性，仅供参考。 该文件要和 xxxx.tex 文件放在同一个文件夹内，即至少会有如下文件夹结构如下：\n--------- 文件夹结构 --------- |—— xxxx.tex |—— cx.sty 配置自己的 xxxx.sty 文档：\n% cx.sty 文件具体内容 % 本宏包在tex文件中的名称： \\NeedsTeXFormat{LaTeX2e} \\ProvidesPackage{cx}[2022/07/15 my LaTeX package] % ===================== 1. 一些预置宏包 ================== % == 各类数学宏包 \\usepackage{amsmath} \\usepackage{amsthm} % amsthm 最好在 amsmath 后面加载 \\usepackage{amssymb} \\usepackage{mathtools} \\usepackage{amsfonts} \\usepackage{wasysym} % 该包使得 \\Diamond，\\Box 比较好看，更敦厚些 \\usepackage{stmaryrd} % \\llbracket \\rrbracket \\usepackage{mathrsfs} % 提供数学环境下的花体字母 % 以下命令设置定理类环境的结束符号，本列中为 $\\dashv$ \\makeatletter \\def\\@endtheorem{\\hfill $\\dashv$ \\endtrivlist\\@endpefalse } \\makeatother % 这两个忘记是干啥的啦。。。 \\usepackage{enumerate} \\usepackage{framed} % 使用外部超链接 \\usepackage{url} % 交叉引用和参考文献 \\usepackage{cite} \\usepackage{hyperref} \\hypersetup{ colorlinks=true, linkcolor=blue, filecolor=green, urlcolor=brown, citecolor=cyan, } % 超链接文字的颜色设置： % 图片设置 \\usepackage{graphicx} % 插图宏包 \\usepackage{float} % 设置图片浮动位置的宏包 \\usepackage{subfigure} % 插入多图时用子图显示的宏包 \\usepackage{caption} % 这个包可以使用 \\caption*{} ，将图片的标题不编号 \\usepackage{times} % 使用Times New Roman字体 % 页面多栏；用于实现在同一页中实现不同的分栏 \\usepackage{multicol} % 注脚宏包 \\usepackage{footmisc} % 文本框，十分强大 \\usepackage{tcolorbox} \\tcbuselibrary{skins, breakable, theorems} % ====================== 字体设定, 尽量别随意变动 ======= % == 英文 \\usepackage{fontspec} \\setmainfont[Mapping=text-text]{Times New Roman} \\setsansfont[Mapping=text-text]{Tahoma} \\setmonofont{Courier New} % == 中文 \\usepackage[CJKchecksingle,CJKnumber]{xeCJK} \\setCJKmainfont{Songti SC}[ BoldFont = Songti SC Black , ItalicFont = Kai ] \\setCJKsansfont{Songti SC} \\setCJKmonofont{Songti SC} % ===================== 中文的定理类环境 =================== % == 定理、定义、引理等都统一连续编号 \\theoremstyle{remark} % \\theoremstyle{style} 中， style 参数有3种： % plain：定理名称是正体，定理内容是斜体 % definition：定理名称和内容都是正体 % remark：定理名称是斜体，定理内容是正体 \\newtheorem{thm}{\\bf{定理}}[section] % 定理，以小结为单位进行连续编号。 % 按需要可以把方括号中的 section 改为 chapter \\newtheorem{def.}[thm]{\\bf{定义}} % 定义 \\newtheorem{lemma}[thm]{\\bf{引理}} % 引理 \\newtheorem{corollary}[thm]{\\bf{推论}} % 推论 \\newtheorem{prop}[thm]{\\bf{命题}} % 命题 \\newtheorem{example}[thm]{\\bf{例}} % 例子 \\newtheorem{note}[thm]{\\textit{注记}} % 注记 % 由于 \\Box 在模态逻辑中的崇高地位，特此将证毕符号 QED 改成黑色的正方形 \\renewcommand{\\qedsymbol}{$\\blacksquare$} % ============= 一些数学环境中常用的符号自定义缩写 ============== \\newcommand{\\IFF}{\\text{ 当且仅当 }} % 中文“当且将当” \\newcommand{\\iffs }{\\;\\Leftrightarrow\\;} % 数学环境中的iff \\newcommand{\\iffz}{$ \\iffs \\; $} % 正文环境中的iff \\newcommand{\\then}{\\text{\\;$\\Rightarrow$\\;}} % “如果，那么” % bisimulation 符号 \\bisimilar \\newcommand{\\bisimilar} {\\;{\\raisebox{.3ex}[0mm][0mm]{\\ensuremath{\\medspace\\underline {\\!\\leftrightarrow\\!}\\medspace}}}\\;} \\newcommand{\\lang}{\\mathcal{L}} % 语言L (美术体) % 数学环境中的破折号 \\dd \\mathchardef\\mhyphen=\u0026#34;2D \\newcommand{\\dd}{\\mhyphen} % 中文文档类小结标题左对齐 % \\CTEXsetup[format={\\Large\\bfseries}]{section} % ======================= 画图设置 =============================== %\\usetikzlibrary{automata, arrows, positioning} \\usepackage{tikz} \\usetikzlibrary{arrows,calc,patterns,positioning,shapes} \\usetikzlibrary{decorations.pathmorphing} \\tikzset{ modal/.style={\u0026gt;=stealth\u0026#39;,shorten \u0026gt;=1pt,shorten \u0026lt;=1pt,auto, node distance=1.5cm,semithick}, world/.style={circle,draw,minimum size=1cm,fill=gray!15}, point/.style={circle,draw,fill=black,inner sep=0.5mm}, reflexive/.style={-\u0026gt;,in=120,out=60,loop,looseness=#1}, reflexive/.default={5}, reflexive point/.style={-\u0026gt;,in=135,out=45,loop,looseness=#1}, reflexive point/.default={25}, } % =================== 一些带重音符号的常用人名 \\newcommand{\\godel}{G\\\u0026#34;{o}del} % Godel \\godel \\newcommand{\\Los}{Lo\\\u0026#39;{s}} % Los \\los \\newcommand{\\lowenheim}{L\\\u0026#34;{o}wenheim} % Lowenheim \\lowenheim % ====================================================================== %% End of file `chenxin_chinese.sty\u0026#39;. Symbols # logical symbols boolean formulae：\\neg, \\!\\sim, \\lor, \\land, \\to, \\bot, \\top \\( \\neg \\varphi, \\sim \\varphi, \\varphi \\lor \\psi, \\varphi\\land\\psi, \\varphi\\to\\psi, \\bot, \\top \\) modalities: \\Box, \\Diamond, \\nabla, \\trialngle: \\( \\Box \\phi, \\Diamond \\phi, \\nabla \\phi, \\triangle \\phi \\) forcing symbols: \\models, \\vDash, \\vdash, \\Vdash: \\( \\models, \\vDash, \\vdash, \\Vdash \\) [其他常用操作] # 插入超链接 % 需要的包 \\usepackage{hyperref} \\hypersetup{colorlinks=true, linkcolor=blue, filecolor=blue,urlcolor=blue, citecolor=cyan,} % 两种引用方法 1. \\url{http://www.hello.com} 2. \\href{http://www.hello.com}{Hello} % 如果是邮箱的话，加入mailto命令即可: \\href{mailto:xxxxx@gmail.com}{xxxxx@gmail.com} # 画 Kripke models: 画一些简单的模型看这个就够了：A Quick TikZ Guide for Modal Logicians (Alex Kocurek, 2020) Diagrams of sphere models for variably strict conditionals (Richard Zach 2018) # 下划线 一般用 \\underline{} 命令，但是一个致命缺点是不能自动换行。一种解决方案如下\n\\usepackage{soul} \\ul{ 要下划线的内容 } 不建议用 ulem 包中的 \\uline{} 命令，因为这种会改变 \\emph{} 的样式。\n# 附录、参考文献等附录设置 \\section*{附录} \\addcontentsline{toc}{section}{附录} % or in Book, Report documentclass: \\chapter*{附录} \\addcontentsline{toc}{chapter}{附录} %\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\section*{参考文献} \\addcontentsline{toc}{section}{参考文献} % or \\chapter*{参考文献} \\addcontentsline{toc}{chapter}{参考文献} TeXstudio 小彩蛋：在编辑界面里面按 ESC 很多下，会出现一只小黄鸭~~~~ (the Tex mascot lion ©)\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2/01/latex-pdf-encryption/", 
      "title": "\u003eLaTeX\u003c pdf Encryption",
      "body": "在 latex 中如何使生成的 pdf 被加密或只读呢？\n用 $XeTeX$ 编译的情况下, 可以用 \\special{} 命令（要放在\\documentclass{}文档类声明前面），这个功能由 xdvipdfmx 所支持的。\n示例：\n1 \\special{pdf:encrypt ownerpw (abc) userpw (xyz) length 128 perm 2052} 2 3 \\documentclass{article} 4 \\begin{document} 5 6 This is an example. 7 8 \\end{document} 其中 abc 和 xyz 都能打开pdf文档，只不过前者拥有管理员权限。\n一般建议使用户密码空缺，即\n\\special{pdf:encrypt ownerpw (abc) userpw () length 128 perm 2052} 加上参数 2052 的设定， 这样只会让 pdf 允许阅读和打印，而拒绝其他操作，如文本复制、高亮等。\n其中参数 128 和 2052 的作用，参考：here (第6章)\n本文主要参考 这个帖子\nps. 但是但是，这种加密的方式其实很弱，破解也是十分容易的。\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2/01/latex-the-philosophy-of-latex/", 
      "title": "\u003eLaTeX\u003c The Philosophy of Latex",
      "body": "本文主要包括一些关于 LaTeX 的编写技巧和习惯。 这些内容大都来自网络，觉得有道理便收集到此处。不定期更新。\n# 公式部分 行间公式用 \\[ \\] 并分作三行，便于日后检查。\n\\[ \\] 其实是 equation* 环境的缩写，因此在其中不能用 \\\\ 命令换行。\n行间公式也是句子的一部分，不过被强行短行，因此不要忽略标点符号。\n数学粗体用 \\bm{}，当追求不同显示效果时可以用 \\mathbf{}。\n: 是一个二元关系符号，以下是一些常见的误用\n定义符号用 \\coloneqq 而不是 :=，后者的冒号会相对等号下移。同理在 BNF 规则中用 \\Coloneqq。 定义函数时用 f\\colon A \\to B 而不要写成 f : A \\to B. 尖括号用 \\langle \\rangle 而不是直接用大于、小于符号。\n\\to 和 \\rightarrow 是同一个符号，为了简便用前者即可。尤其是在写蕴涵式的时候。\n\\mid 是一个二元关系，而 | 是一个 math ordinal，因此 BNF 中的分隔线要用前者，如 p \\mid \\neg \\varphi \\mid \\Diamond \\varphi.\n# Misc. 数学方面的学术写作参考 Writing Scientific Documents Using LaTeX\n大型文档用 \\input 或 \\include 分出章节，模块化管理易于调试。\n大型项目中，源码的单个 .tex 文件最好不要超过 1000 行，方便校对。\n在不希望分割的词组间用 ~ 连接，如 this theorem from~\\cite{article} （引文不应该出现在首行）；Blackburn~et~al~2001 （et al 不应该被分开）。\n单行注释用 %。多行注释可以在每行开头插入 %，也可以用如下环境（注意是 comment 而不是复数 comments）\n\\begin{comment} 这是 一条 多行注释 \\end{comment} # 编辑器 TeXStudio 字体，从可读性和美观上考量\nmacOS 上用 Menlo 字体 windows 上用 consolas 字体 linux 上用 dejavu san mono 字体 要利用其强大的「宏」功能\n用 Ctrl+f、Ctrl+b、Ctrl+n、Ctrl+p 代替方向键，这几个键位虽不如 vim 中那样方便，但胜在 MacOS 上全局通用。 记得互换 CapsLock 和 Ctrl 的键位，保护小指健康😘\n"
    },
    {
      "href": "http://nixnehc.github.io/posts/2/01/latex-tikz-for-myself/", 
      "title": "\u003eLaTeX\u003c Tikz for Myself",
      "body": "写论文免不了画一些图，虽说 mathcha 这类有点用，但还是太弱了。 Tikz 理论上什么图都可以画，这里列举一些 Tikz 宏包的使用例子， 来源的话都是从各个网站上面搬运的，择其善者而摘之。\n不定期更新。\n图片格式 支持矢量图：\npdf eps 点阵图：\npng jpg bmp 不同编译方式所支持的图片格式：\nLaTeX \u0026ndash;\u0026gt; eps, bmp Pdflatex \u0026ndash;\u0026gt; pdf XeLaTeX \u0026ndash;\u0026gt; 几乎全部格式（不支持svg） 基本操作 % 基本宏包： \\usepackage{amsmath, mathrsfs, amsfonts} \\usepackage{tikz} \\usepackage{graphicx} tikz 中所有命令都要以分号 ; 结尾，和C语言等类似。\n显示绘图区域边界：backgrounds\n\\usetikzlibrary{backgrounds} \\begin{tikzpicture}[scale=0.8, show background rectangle] ... ... ... \\end{tikzpicture} 这个功能在写文章草稿的时候挺好用的，对自己画的图大小有一个大概的把握。\n行内画图示例： hello \\tikz \\draw(0pt,0pt)--(30pt,6pt); world! hello \\tikz{ \\draw(0pt,0pt)--(30pt,6pt); } world!\n行间图示例：\n\\begin{tikzpicture} \\draw[style=dashed] (2,.5) circle (1); % (2,.5)是圆心，(.5)是半径。 \\draw[fill=green] (0,0) rectangle (1,1); % (0,0) 和 (1,1) 是矩形的对角线。 ... ... \\end{tikzpicture} 一个很有用的说明文档：texdoc visualtikz\n先来画条线段吧 % 线段及文字标注 \\begin{tikzpicture} \\draw[-\u0026gt;] (0,0)--(5,0); %也可以把中间的两个横杠 -- 换成 to \\draw[dashed, \u0026lt;-\u0026gt;] (0,-1)--(5,-1); \\draw[dotted, |\u0026lt;-\u0026gt;|] (0,-2)--(5,-2); % 添加文字信息 \\draw[-\u0026gt;] (0,1)--node[below]{这是一条线段} (5,1); % node 位置可选参数有：above, below, left, right \\draw[-\u0026gt;] (0,1)--node[fill=witht]{这是一条线段} (5,1); % 相当于将 文本框 的那个box的背景色填充为了白色 \\draw[-\u0026gt;] (0,1)node[left]{左端点$a$} -- (5,1)node[right]{右端点$b$}; \\node at (0,4)[below]{这是一段话} ; \\fill[red] (0,0) circle (2pt); % 画一个红点 \\end{tikzpicture} 一些文献中图的复现 "
    },
    {
      "href": "http://nixnehc.github.io/about/", 
      "title": "About",
      "body": "This is ChenXin, welcome to my blog!\nYou may confuse that the word nixnehc in URLs of this blog, I just left an easter egg here, and I\u0026rsquo;ll reveal the answer in the end of this page.\n🥸 INFJ-A (I called that \u0026lsquo;16-Personality Religion\u0026rsquo; which Yuqian「昱倩」introduced it to me)\n🤗 I have long hair but short wit.\n😽 I like /ᐠ｡ꞈ｡ᐟ\\ and ▼~ᴥ~▼ I once owned two dogs with the same name \u0026ldquo;Dog\u0026rdquo; (2015-2018), and a cat called \u0026ldquo;DuoDuo 多多\u0026rdquo; (2022-2023).\n🥳 I want to be a logician!\n😲「逻辑像蛇 🐍，想象是鸟 🦜」\n🙏「折耳根之神」保佑每一个位云贵川渝在外学习的孩子\n🙇 My current religious affiliation:\n🤔 My credo\none Tab, four spaces. ➝_➝ 「一切理论都是灰色的，唯有生命之金树常青！」《浮士德》 🧝‍♀️ My goddess @Alexandra Elbakyan\n👍 My idols or role models\nCharlie Brown + Linus + Snoopy ~~~\u0026gt; @Peanuts 赤名リカ (赤名莉香) 野原广志 + 野原新之助 Spike (a hero) 章鱼哥 + 派大星 🛴 My tracks My 1997-2024 @中国制霸生成器\n🥰 Love of my life\nAmaya 😫 The reason why this blog exists: @S3E06(18min)\n🎉🎉🎉🎉 Did you get it? nixnehc is just the inverse of chenxin, hahaha. Moreover, all poems in this blog are signed with nixnehc, because a poet is a person who has the ability to see the opposite side of the reality. 🎉🎉🎉🎉\n😜 About this blog and theme\n本博客自豪地由 Hugo 驱动，所采用的主题是自己编写的，我把这个主题取名为 DuoDuo ——— 为纪念我曾经拥有过的一只小猫咪(布偶哟)， DuoDuo 是他的名字。您会在这个博客的各个角落看到 Duoduo 的身影。\n"
    } 
  ]
}